本项目在微信小游戏飞机大战的基础上进行了许多修改，由于飞机大战只有英雄可以攻击，并且只会单向攻击，敌人也只会单方向移动且会被一击毙命，因此想要模拟sc2的失落的维京，要对enemy和hero进行大改。
失落的维京中的敌人会从各种地方出现，会在静止时掉头朝向玩家，会不定时发射各种子弹（如凤凰的先发射两颗射向两边的子弹再延时发射一颗射向玩家的子弹），也有各种特性（如死亡后才发射子弹的虫族单位），
这些都需要用js进行代码实现：

对于enemy
1.对于图片的旋转：我编写了一个可以让所有敌人继承的基类，它具有angle属性可以记录自身朝向，利用canvas的translate和rotate函数在绘画时旋转canvas实现对敌人的旋转绘制。
2.对于敌人的移动：我编写了一个名为route的Object对象，里面有二次函数的a,b,c等参数，用于存储enemy的移动路线，通过增加参数可以实现各种多次函数的路线绘制。
（目前仅仅使用了二次函数作为运动路线的绘制曲线，失落的维京中貌似也没有二次以上的运动路径）
3.对于敌人的暂停：设置了一个标识符来标记敌人是否处于停留状态，目前并不算复杂
4.对于敌人的血量：设置了一个类元素来记录敌人的血量，目前并不算复杂
实际实现时会遇到一些问题：
1.运动路径的原点以及x轴和y轴的选择问题。在本项目中我以敌人出生点为原点绘制路径曲线，x轴和y轴同canvas，以右下为x，y轴正方向，这样会不可避免地出现敌人所在路径的斜率k和angle的转换问题，canvas的旋转是顺时
针旋转，我的图片往往默认是以y轴正向为默认朝向，也就是说图片要先旋转3/2*Math.PI才能朝向x轴正向，方便也就是以k直接转换为angle。但是还有一个问题，tan和atan的使用，atan的范围只有-Math.PI/2到Math.PI/2
因此要正确地旋转图片需要一定的转换，我写的代码结构并不是很好，也许选择更好的原点和x，y轴可以更好地处理这个问题
2.由于为了保证匀速运动，在得到x和y的变化量时要考虑到k的变化，因此多次函数的计算可能会及其复杂
3.敌人发射的子弹也要进行旋转，并且要有指向玩家的能力，通过获取canvas上的布局数据只能知道敌人和玩家之间的dx和dy，实际上要合适地旋转还需要使用范围不完全的atan函数，处理地不好也会使代码变得不简单
4.凤凰战机的两轮发射也是一个相对来说的难点，主要在于要处理第一轮子弹的角度和朝向，我设置了第一轮子弹都与第二轮指向玩家的子弹有着30度的夹角，在代码中先确认了第二轮子弹的angle，之后通过第二轮子弹的angle
来确定第一轮两个子弹的angle，这时需要判断他们的象限（由于不存在拐弯子弹，我的子弹的update是根据dx和dy来的）和使用tan来确认子弹的dx和dy的比例和正负，具体数值根据目标速度对dx和dy进行倍数变化即可

对于hero
在实现了enemy的功能之后，hero的功能就相对简单了，在失落的维京中只有4种射击方式，在当前代码中hero已经有了shootMethod来记录hero当前的射击方式，散射抄一抄凤凰，能量弹换一换图片，改一改伤害即可。
hero的实现目前最麻烦的就是移动了，参考以往的经验，我根据点击的位置用canvas绘制了一个半透明的白色圆形，之后根据手指移动的位置绘制第二个更小的半透明白色圆形，第二个圆形我打算限制在第一个圆形里面，
不过之前一直懒得动，目前也暂时不太想动了。为了缅怀用连点器拿成就的过去，每次点击屏幕都会进行一次额外的射击（也许该加个攻速上限？）。

对于背景和镜头（只有在background.js的BG_WIDTH或BG_HEIGHT大于对应的IMG_WIDTH或IMG_HEIGHT时才有体现，说人话就是背景图片的大小大于canvas一次呈现的大小时，目前因为各种原因是相等的）：
由于为了让失落的维京的游戏背景能在手机上完全呈现，会随维京战机的移动而移动的背景必不可少，但是这样会带来许多问题，那就是要同时更新和记录一维京战机、敌人和子弹在屏幕呈现出来的位置和在它们整个背景的位置，
以及镜头的位置，为了速度感，我将镜头的移动速度设置得比维京最快的移动速度慢，松开后会以更慢的速度使镜头居中，不过由于移动方向会变，所以做不到光靠移动就能居中，因此要在镜头接近居中时进行判断，强制镜头居中。
使用canvas的translate函数会很方便，但是我并没有使用，而是使用了各种计算，通过用镜头位置，对象位置计算出了对象在屏幕的位置，然后进行绘制，问就是当时查半天也没注意到canvas的translate函数，有想法就去做了。

对于道具：
升级道具虽未实现，但也算简单，移动只需要模仿enemy的移动即可，定时的变换目前打算通过使用RAF的timeStamp和一个记录道具诞生实际的变量birthTime来实现，因为是固定变换顺序，因此只要在每次变幻时调用函数即可。
炸弹只要遍历一下databus种的enemy和bullet设置visible为false，下次update时就都会进入对象池，也算是简单

对于动画：
目前的动画使用的是微信小游戏的动画生成方式，目前使用下来感觉还行，但是资源的获取不算简单，录个动画暂停截十几张图，感觉很麻烦，找个能超慢速播放视频的软件那还行，不过分辨率和ps又是一个问题

对于FPS：
使用了RAF的timeStamp实现了固定帧率，但是目前的方案貌似有点问题，应该根据真实的FPS来更改每次更新时的运动量，默认60FPS，若是改成240FPS，每次的运动量应该变为原来的1/4.

对于对象池和databus：
因为使用的是基于类的对象池，因此每个不同的类都应该有独立的对象池，否则回收的对象可能无法取出，导致游戏卡顿。原来的飞机大战中的databus和对象池，因为都是先发射的子弹和出现的敌人先消失，所以可以直接取顶部，
但是失落的维京的敌人和子弹的消失都不确定，因此也要对databus和对象池进行大改

对于机型适配：
目前仅对尺寸进行了适配，敌人，维京战机以及所有子弹的大小和速度都是由机型大小调整的

对于资源：
各种资源难以获取，目前的资源都是截图+ps获取，许多东西虽然简单但是因为缺少资源懒得做，比如道具，又比如动画，导致目前的版本貌似看上去没做什么，实际上第一次用原生js来写会各种运动和发射子弹的敌人以及旋转绘制
还有镜头控制真的很痛苦

